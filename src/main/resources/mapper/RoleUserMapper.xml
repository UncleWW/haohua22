<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hh.improve.dao.RoleUserDao" >

  <resultMap id="BaseResultMap" type="com.hh.improve.entity.RoleUser" >
    <result column="USER_PHONE" property="userPhone" jdbcType="VARCHAR" />
	<result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
	<result column="REMARK" property="remark" jdbcType="VARCHAR" />
	<result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
	<result column="MODIFIED_TIME" property="modifiedTime" jdbcType="TIMESTAMP" />
	<result column="CREATER" property="creater" jdbcType="VARCHAR" />
	<result column="MODIFIER" property="modifier" jdbcType="VARCHAR" />
	<result column="STATUS" property="status" jdbcType="VARCHAR"/>
  </resultMap>
<resultMap id="BaseUserMap" type="com.hh.improve.entity.User" >
    <result column="user_Name" property="userName" jdbcType="VARCHAR" />
    <result column="user_Phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
  </resultMap>
 
  <!-- 返回字段 -->
  <sql id="Base_Column_List" >
    A.USER_PHONE, A.ROLE_CODE ,A.CREATED_TIME,A.MODIFIED_TIME ,A.CREATER ,A.MODIFIER ,A.STATUS
  </sql>
 <sql id="User_Column_List" >
     U.user_Name, U.user_Phone, U.password, U.sex,
     U.status,U.creater, U.created_time,U.modifier, U.modified_time
  </sql>
  <select id="queryAll" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM hh_role_user A
    <where> 
        <if test="roleCode != null and roleCode != ''">
            AND A.ROLE_CODE = #{roleCode, jdbcType=VARCHAR}
        </if>
        <if test="userPhone != null and userPhone != ''">
            AND A.USER_PHONE = #{userPhone, jdbcType=VARCHAR}
        </if>
		<if test="status != null" >
		    AND A.STATUS = #{status, jdbcType=VARCHAR}
		 </if>
		 <if test="creater != null and creater !=''" >
		    ND A.CREATER = #{creater, jdbcType=VARCHAR} 
		 </if>
		 <if test="modifier != null and modifier !=''" >
		    AND A.MODIFIER = #{modifier, jdbcType=VARCHAR} 
		 </if>
    </where>
    ORDER BY A.MODIFIED_TIME DESC
  </select>
  
  <select id="selectUserRole" resultMap="BaseUserMap">
    SELECT <include refid="User_Column_List" />
    FROM hh_user U LEFT JOIN hh_role_user RU ON RU.USER_PHONE = U.USER_PHONE
    <where> RU.ROLE_CODE = #{roleCode, jdbcType=VARCHAR} 
        AND RU.STATUS = #{status, jdbcType=VARCHAR}
        <if test="userPhone != null and userPhone != ''">
            AND U.USER_PHONE like "%"#{userPhone}"%"
        </if>
        <if test="userName != null and userName !=''">
            AND U.USER_NAME like "%"#{userName}"%"
        </if>
    </where>
    ORDER BY U.MODIFIED_TIME DESC
  </select>
  <select id="selectUserNoRole" resultMap="BaseUserMap">
    SELECT <include refid="User_Column_List" />
    FROM hh_user U
    <where> U.USER_PHONE NOT IN
        (SELECT RU.USER_PHONE FROM hh_role_user RU WHERE RU.ROLE_CODE = #{roleCode, jdbcType=VARCHAR} AND RU.STATUS =  #{status, jdbcType=VARCHAR})
        <if test="userPhone != null and userPhone != ''">
            AND U.USER_PHONE like "%"#{userPhone}"%"
        </if>
        <if test="userName != null and userName !=''">
            AND U.USER_NAME like "%"#{userName}"%"
        </if>
    </where>
    ORDER BY U.MODIFIED_TIME DESC
  </select>
   <!-- oracle 写法-->
<!--  <insert id="updateUserRole" >
        MERGE INTO hh_role_user RU USING
            (SELECT #{userPhone, jdbcType=VARCHAR} as userPhone, #{roleCode, jdbcType=VARCHAR} as roleCode from dual) d
            on (RU.USER_PHONE = d.userPhone AND RU.ROLE_CODE = d.roleCode)
        when not matched then insert
            <trim prefix="(" suffix=")" suffixOverrides=",">
                USER_PHONE,
                ROLE_CODE, 
                STATUS, 
                CREATER, 
                CREATED_TIME
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                #{userPhone, jdbcType=VARCHAR},
                #{roleCode, jdbcType=VARCHAR},
                #{status, jdbcType=VARCHAR} ,
                #{creater, jdbcType=VARCHAR}, 
                sysdate()
            </trim>
        when matched then update
            <set>
                STATUS = #{status, jdbcType=VARCHAR} ,
                MODIFIER = #{modifier, jdbcType=VARCHAR}, 
                MODIFIED_TIME = sysdate()
            </set>
            where ROLE_CODE = #{roleCode}
  </insert>-->
  <insert id="updateUserRole" >
        replace INTO hh_role_user
        (
            USER_PHONE,
            ROLE_CODE,
            STATUS,
            CREATER,
            modifier,
            CREATED_TIME,
            modified_time
      )VALUES
          (
            #{userPhone, jdbcType=VARCHAR},
            #{roleCode, jdbcType=VARCHAR},
            #{status, jdbcType=VARCHAR} ,
            #{creater, jdbcType=VARCHAR},
            #{modifier, jdbcType=VARCHAR},
            #{createdTime, jdbcType=VARCHAR},
            sysdate()
      )
    </insert>
</mapper>